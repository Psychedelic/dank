type TransactionId = nat64;

type EventDetail = variant {
    Transfer : record {
        from : principal;
        to   : principal;
    };
    // DEX events
    Mint     : record {
        to   : principal;
    };
    Burn     : record {
        from : principal;
        to   : principal;
    };
    CanisterCalled : record {
        from : principal;
        canister : principal;
        method_name: text;
    };
    CanisterCreated : record {
        from : principal;
        canister : principal;
    };
};

type Event = record {
    fee       : nat64;
    kind      : EventDetail;
    cycles    : nat64;
    timestamp : nat64;
};

type EventsConnection = record {
    data            : vec Event;
    next_offset     : TransactionId;
    next_canister_id: opt principal;
};

service : {
    get_transaction : (id: TransactionId) -> (opt Event);
    events : (record { offset: opt nat64; limit: nat16 }) -> (EventsConnection) query;

    insert : (count: nat32, progress: bool) -> ();
    stabilize : () -> ();
}